TOPICS = {
    "beginner": {
        "ru": """üìò *–¢–µ–º–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ Python*
Python ‚Äî —ç—Ç–æ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∏ –º–æ—â–µ–Ω –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.

print("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")


üìò –¢–µ–º–∞ 2: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.

name = "–ê–ª–∏—è"
age = 18
height = 1.70
print(type(name), type(age), type(height))


üìò –¢–µ–º–∞ 3: –£—Å–ª–æ–≤–∏—è
–û–ø–µ—Ä–∞—Ç–æ—Ä if –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π.

if age >= 18:
    print("–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π")
else:
    print("–ù–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π")


""",

        "en": """üìò *Topic 1: Introduction to Python*

Python is a simple and powerful programming language.

print("Hello, world!")


üìò Topic 2: Variables and data types
Variables allow storing and processing values.

name = "Ali"
age = 18
height = 1.75
print(type(name), type(age), type(height))


üìò Topic 3: Conditions
The if statement is used for logical checks.

if age >= 18:
    print("Adult")
else:
    print("Minor")


""",

        "kz": """üìò *–¢–∞“õ—ã—Ä—ã–ø 1: Python —Ç—ñ–ª—ñ–Ω–µ –∫—ñ—Ä—ñ—Å–ø–µ*

Python ‚Äî “Ø–π—Ä–µ–Ω—É–≥–µ –æ“£–∞–π –∂”ô–Ω–µ “õ—É–∞—Ç—Ç—ã —Ç—ñ–ª.

print("–°”ô–ª–µ–º, ”ô–ª–µ–º!")


üìò –¢–∞“õ—ã—Ä—ã–ø 2: –ê–π–Ω—ã–º–∞–ª—ã–ª–∞—Ä –º–µ–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä —Ç“Ø—Ä–ª–µ—Ä—ñ
–ê–π–Ω—ã–º–∞–ª—ã–ª–∞—Ä –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä–¥—ñ —Å–∞“õ—Ç–∞—É“ì–∞ –∂”ô–Ω–µ ”©“£–¥–µ—É–≥–µ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–µ—Ä–µ–¥—ñ.

name = "–ê–ª–∏—è"
age = 18
height = 1.65
print(type(name), type(age), type(height))


üìò –¢–∞“õ—ã—Ä—ã–ø 3: –®–∞—Ä—Ç—Ç–∞—Ä
if –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ª–æ–≥–∏–∫–∞–ª—ã“õ —Ç–µ–∫—Å–µ—Ä—É–ª–µ—Ä–≥–µ “õ–æ–ª–¥–∞–Ω—ã–ª–∞–¥—ã.

if age >= 18:
    print("–ï—Ä–µ—Å–µ–∫")
else:
    print("–ñ–∞—Å”©—Å–ø—ñ—Ä—ñ–º")


"""
    },

    "intermediate": {
        "ru": """üìò *–¢–µ–º–∞ 1: –¶–∏–∫–ª—ã*

–¶–∏–∫–ª—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.

for i in range(5):
    print(i)


üìò –¢–µ–º–∞ 2: –§—É–Ω–∫—Ü–∏–∏
–§—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥.

def greet(name):
    return f"–ü—Ä–∏–≤–µ—Ç, {name}!"
print(greet("–ê–ª–∏—è"))


üìò –¢–µ–º–∞ 3: –°–ø–∏—Å–∫–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏

fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∫–∏–≤–∏"]
prices = {"—è–±–ª–æ–∫–æ": 200, "–±–∞–Ω–∞–Ω": 150}
print(fruits[0], prices["–±–∞–Ω–∞–Ω"])


""",

        "en": """üìò *Topic 1: Loops*

Loops allow repeating blocks of code.

for i in range(5):
    print(i)


üìò Topic 2: Functions
Functions make code reusable.

def greet(name):
    return f"Hello, {name}!"
print(greet("Ali"))


üìò Topic 3: Lists and dictionaries

fruits = ["apple", "banana", "kiwi"]
prices = {"apple": 200, "banana": 150}
print(fruits[0], prices["banana"])


""",

        "kz": """üìò *–¢–∞“õ—ã—Ä—ã–ø 1: –¶–∏–∫–ª–¥–µ—Ä*

–¶–∏–∫–ª–¥–µ—Ä –∫–æ–¥—Ç—ã –±—ñ—Ä–Ω–µ—à–µ —Ä–µ—Ç –æ—Ä—ã–Ω–¥–∞—É“ì–∞ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–µ—Ä–µ–¥—ñ.

for i in range(5):
    print(i)


üìò –¢–∞“õ—ã—Ä—ã–ø 2: –§—É–Ω–∫—Ü–∏—è–ª–∞—Ä
–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –∫–æ–¥—Ç—ã “õ“±—Ä—ã–ª—ã–º–¥–∞—É“ì–∞ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–µ—Ä–µ–¥—ñ.

def greet(name):
    return f"–°”ô–ª–µ–º, {name}!"
print(greet("–ê–ª–∏—è"))


üìò –¢–∞“õ—ã—Ä—ã–ø 3: –¢—ñ–∑—ñ–º–¥–µ—Ä –º–µ–Ω —Å”©–∑–¥—ñ–∫—Ç–µ—Ä

fruits = ["–∞–ª–º–∞", "–±–∞–Ω–∞–Ω", "–∫–∏–≤–∏"]
prices = {"–∞–ª–º–∞": 200, "–±–∞–Ω–∞–Ω": 150}
print(fruits[0], prices["–±–∞–Ω–∞–Ω"])


"""
    },

    "advanced": {
        "ru": """üìò *–¢–µ–º–∞ 1: –ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã*

–ö–ª–∞—Å—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö.

class Person:
    def __init__(self, name):
        self.name = name
    def say_hi(self):
        print(f"–ü—Ä–∏–≤–µ—Ç, —è {self.name}")


üìò –¢–µ–º–∞ 2: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏

with open("data.txt", "w") as f:
    f.write("–ü—Ä–∏–≤–µ—Ç, —Ñ–∞–π–ª!")


üìò –¢–µ–º–∞ 3: –ò—Å–∫–ª—é—á–µ–Ω–∏—è
–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –Ω–∞–¥—ë–∂–Ω–µ–µ.

try:
    x = int("abc")
except ValueError:
    print("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è!")


""",

        "en": """üìò *Topic 1: Classes and objects*

Classes are used to create custom data types.

class Person:
    def __init__(self, name):
        self.name = name
    def say_hi(self):
        print(f"Hi, I'm {self.name}")


üìò Topic 2: Working with files

with open("data.txt", "w") as f:
    f.write("Hello, file!")


üìò Topic 3: Exceptions
Exception handling makes code safer.

try:
    x = int("abc")
except ValueError:
    print("Conversion error!")


""",

        "kz": """üìò *–¢–∞“õ—ã—Ä—ã–ø 1: –ö–ª–∞—Å—Ç–∞—Ä –º–µ–Ω –æ–±—ä–µ–∫—Ç—ñ–ª–µ—Ä*

–ö–ª–∞—Å—Ç–∞—Ä ”©–∑ –¥–µ—Ä–µ–∫—Ç–µ—Ä —Ç“Ø—Ä–ª–µ—Ä—ñ–Ω –∂–∞—Å–∞—É“ì–∞ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–µ—Ä–µ–¥—ñ.

class Person:
    def __init__(self, name):
        self.name = name
    def say_hi(self):
        print(f"–°”ô–ª–µ–º, –º–µ–Ω {self.name}")


üìò –¢–∞“õ—ã—Ä—ã–ø 2: –§–∞–π–ª–º–µ–Ω –∂“±–º—ã—Å

with open("data.txt", "w") as f:
    f.write("–°”ô–ª–µ–º, —Ñ–∞–π–ª!")


üìò –¢–∞“õ—ã—Ä—ã–ø 3: –ï—Ä–µ–∫—à–µ –∂–∞“ì–¥–∞–π–ª–∞—Ä
“ö–∞—Ç–µ ”©“£–¥–µ—É –±–∞“ì–¥–∞—Ä–ª–∞–º–∞–Ω—ã —Å–µ–Ω—ñ–º–¥—ñ –µ—Ç–µ–¥—ñ.

try:
    x = int("abc")
except ValueError:
    print("“ö–∞—Ç–µ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—É!")


"""
    }
}
